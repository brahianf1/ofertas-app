# Docker Compose para la aplicación de Ofertas
version: '3.8'

services:
  # Backend - API Node.js
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ofertas-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
    networks:
      - ofertas-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend - React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ofertas-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      - VITE_API_URL=http://backend:3001/api
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - ofertas-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  ofertas-network:
    driver: bridge
    name: ofertas-network

# Volúmenes para persistencia (si es necesario en el futuro)
volumes:
  backend-data:
    name: ofertas-backend-data
